generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  image     String?
  createdAt DateTime @default(now())

  blogs     Blog[]
  likes     Like[]
  bookmarks Bookmark[]
  comments  Comment[]
}

model Blog {
  id         String      @id @default(cuid())
  title      String
  slug       String      @unique
  tag        String?
  excerpt    String?
  image      String?
  content    String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt

  authorId   String?
  author     User?       @relation(fields: [authorId], references: [id], onDelete: Cascade)

  likes      Like[]
  bookmarks  Bookmark[]
  comments   Comment[]
}

model Like {
  id        String   @id @default(cuid())
  userId    String
  blogId    String
  createdAt DateTime @default(now())

  blog Blog @relation(fields: [blogId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, blogId])
}

model Bookmark {
  id        String   @id @default(cuid())
  userId    String
  blogId    String
  createdAt DateTime @default(now())

  blog Blog @relation(fields: [blogId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, blogId])
}

model Comment {
  id        String   @id @default(cuid())
  userId    String
  blogId    String
  content   String
  createdAt DateTime @default(now())

  blog Blog @relation(fields: [blogId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
